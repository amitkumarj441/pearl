// Code generated by etc/enum/makeenum.py. DO NOT EDIT

package pearl

import "fmt"

// StreamCloseReason specifies why a stream was closed.
type StreamCloseReason byte

// All possible StreamCloseReason values.
//
// Reference: https://github.com/torproject/torspec/blob/0fd44031bfd6c6c822bfb194e54a05118c9625e2/tor-spec.txt#L1591-L1608
//
//	       1 -- REASON_MISC           (catch-all for unlisted reasons)
//	       2 -- REASON_RESOLVEFAILED  (couldn't look up hostname)
//	       3 -- REASON_CONNECTREFUSED (remote host refused connection) [*]
//	       4 -- REASON_EXITPOLICY     (OR refuses to connect to host or port)
//	       5 -- REASON_DESTROY        (Circuit is being destroyed)
//	       6 -- REASON_DONE           (Anonymized TCP connection was closed)
//	       7 -- REASON_TIMEOUT        (Connection timed out, or OR timed out
//	                                   while connecting)
//	       8 -- REASON_NOROUTE        (Routing error while attempting to
//	                                   contact destination)
//	       9 -- REASON_HIBERNATING    (OR is temporarily hibernating)
//	      10 -- REASON_INTERNAL       (Internal error at the OR)
//	      11 -- REASON_RESOURCELIMIT  (OR has no resources to fulfill request)
//	      12 -- REASON_CONNRESET      (Connection was unexpectedly reset)
//	      13 -- REASON_TORPROTOCOL    (Sent when closing connection because of
//	                                   Tor protocol violations.)
//	      14 -- REASON_NOTDIRECTORY   (Client sent RELAY_BEGIN_DIR to a
//	                                   non-directory relay.)
//
const (
	StreamCloseReasonMisc           StreamCloseReason = 1
	StreamCloseReasonResolvefailed  StreamCloseReason = 2
	StreamCloseReasonConnectrefused StreamCloseReason = 3
	StreamCloseReasonExitpolicy     StreamCloseReason = 4
	StreamCloseReasonDestroy        StreamCloseReason = 5
	StreamCloseReasonDone           StreamCloseReason = 6
	StreamCloseReasonTimeout        StreamCloseReason = 7
	StreamCloseReasonNoroute        StreamCloseReason = 8
	StreamCloseReasonHibernating    StreamCloseReason = 9
	StreamCloseReasonInternal       StreamCloseReason = 10
	StreamCloseReasonResourcelimit  StreamCloseReason = 11
	StreamCloseReasonConnreset      StreamCloseReason = 12
	StreamCloseReasonTorprotocol    StreamCloseReason = 13
	StreamCloseReasonNotdirectory   StreamCloseReason = 14
)

var stringsStreamCloseReason = map[StreamCloseReason]string{
	1:  "REASON_MISC",
	2:  "REASON_RESOLVEFAILED",
	3:  "REASON_CONNECTREFUSED",
	4:  "REASON_EXITPOLICY",
	5:  "REASON_DESTROY",
	6:  "REASON_DONE",
	7:  "REASON_TIMEOUT",
	8:  "REASON_NOROUTE",
	9:  "REASON_HIBERNATING",
	10: "REASON_INTERNAL",
	11: "REASON_RESOURCELIMIT",
	12: "REASON_CONNRESET",
	13: "REASON_TORPROTOCOL",
	14: "REASON_NOTDIRECTORY",
}

func (s StreamCloseReason) String() string {
	str, ok := stringsStreamCloseReason[s]
	if ok {
		return str
	}
	return fmt.Sprintf("StreamCloseReason(%d)", byte(s))
}

// IsStreamCloseReason determines whether s is a possible StreamCloseReason value.
func IsStreamCloseReason(s byte) bool {
	_, ok := stringsStreamCloseReason[StreamCloseReason(s)]
	return ok
}
