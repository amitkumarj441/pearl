// Code generated by etc/enum/makeenum.py. DO NOT EDIT

package pearl

import "fmt"

// RelayCommand represents a relay cell command byte.
type RelayCommand byte

// All possible RelayCommand values.
//
// Reference: https://github.com/torproject/torspec/blob/8aaa36d1a062b20ca263b6ac613b77a3ba1eb113/tor-spec.txt#L1422-L1439
//
//	   The relay commands are:
//	         1 -- RELAY_BEGIN     [forward]
//	         2 -- RELAY_DATA      [forward or backward]
//	         3 -- RELAY_END       [forward or backward]
//	         4 -- RELAY_CONNECTED [backward]
//	         5 -- RELAY_SENDME    [forward or backward] [sometimes control]
//	         6 -- RELAY_EXTEND    [forward]             [control]
//	         7 -- RELAY_EXTENDED  [backward]            [control]
//	         8 -- RELAY_TRUNCATE  [forward]             [control]
//	         9 -- RELAY_TRUNCATED [backward]            [control]
//	        10 -- RELAY_DROP      [forward or backward] [control]
//	        11 -- RELAY_RESOLVE   [forward]
//	        12 -- RELAY_RESOLVED  [backward]
//	        13 -- RELAY_BEGIN_DIR [forward]
//	        14 -- RELAY_EXTEND2   [forward]             [control]
//	        15 -- RELAY_EXTENDED2 [backward]            [control]
//	
//	        32..40 -- Used for hidden services; see rend-spec.txt.
//
const (
	RelayBegin     RelayCommand = 1
	RelayData      RelayCommand = 2
	RelayEnd       RelayCommand = 3
	RelayConnected RelayCommand = 4
	RelaySendme    RelayCommand = 5
	RelayExtend    RelayCommand = 6
	RelayExtended  RelayCommand = 7
	RelayTruncate  RelayCommand = 8
	RelayTruncated RelayCommand = 9
	RelayDrop      RelayCommand = 10
	RelayResolve   RelayCommand = 11
	RelayResolved  RelayCommand = 12
	RelayBeginDir  RelayCommand = 13
	RelayExtend2   RelayCommand = 14
	RelayExtended2 RelayCommand = 15
)

var stringsRelayCommand = map[RelayCommand]string{
	1:  "RELAY_BEGIN",
	2:  "RELAY_DATA",
	3:  "RELAY_END",
	4:  "RELAY_CONNECTED",
	5:  "RELAY_SENDME",
	6:  "RELAY_EXTEND",
	7:  "RELAY_EXTENDED",
	8:  "RELAY_TRUNCATE",
	9:  "RELAY_TRUNCATED",
	10: "RELAY_DROP",
	11: "RELAY_RESOLVE",
	12: "RELAY_RESOLVED",
	13: "RELAY_BEGIN_DIR",
	14: "RELAY_EXTEND2",
	15: "RELAY_EXTENDED2",
}

func (r RelayCommand) String() string {
	s, ok := stringsRelayCommand[r]
	if ok {
		return s
	}
	return fmt.Sprintf("RelayCommand(%d)", byte(r))
}

// IsRelayCommand determines whether r is a possible RelayCommand value.
func IsRelayCommand(r byte) bool {
	_, ok := stringsRelayCommand[RelayCommand(r)]
	return ok
}
