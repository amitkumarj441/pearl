// Code generated by etc/enum/makeenum.py. DO NOT EDIT

package pearl

import "fmt"

// CertType is a certificate type code for CERTS cells.
type CertType byte

// All possible CertType values.
//
// Reference: https://github.com/torproject/torspec/blob/8aaa36d1a062b20ca263b6ac613b77a3ba1eb113/tor-spec.txt#L594-L601
//
//	     Relevant certType values are:
//	        1: Link key certificate certified by RSA1024 identity
//	        2: RSA1024 Identity certificate, self-signed.
//	        3: RSA1024 AUTHENTICATE cell link certificate, signed with RSA1024 key.
//	        4: Ed25519 signing key, signed with identity key.
//	        5: TLS link certificate, signed with ed25519 signing key.
//	        6: Ed25519 AUTHENTICATE cell key, signed with ed25519 signing key.
//	        7: Ed25519 identity, signed with RSA identity.
//
const (
	CertTypeLink            CertType = 1
	CertTypeIdentity        CertType = 2
	CertTypeAuth            CertType = 3
	CertTypeEd25519Signing  CertType = 4
	CertTypeEd25519Link     CertType = 5
	CertTypeEd25519Auth     CertType = 6
	CertTypeEd25519Identity CertType = 7
)

var stringsCertType = map[CertType]string{
	1: "LINK",
	2: "IDENTITY",
	3: "AUTH",
	4: "ED25519_SIGNING",
	5: "ED25519_LINK",
	6: "ED25519_AUTH",
	7: "ED25519_IDENTITY",
}

func (c CertType) String() string {
	s, ok := stringsCertType[c]
	if ok {
		return s
	}
	return fmt.Sprintf("CertType(%d)", byte(c))
}

func IsCertType(c byte) bool {
	_, ok := stringsCertType[CertType(c)]
	return ok
}
